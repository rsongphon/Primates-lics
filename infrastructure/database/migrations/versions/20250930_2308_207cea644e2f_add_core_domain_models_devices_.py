"""Add core domain models (devices, experiments, tasks, participants)

Revision ID: 207cea644e2f
Revises: add_organizations_table
Create Date: 2025-09-30 23:08:51.450092

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '207cea644e2f'
down_revision: Union[str, None] = 'add_organizations_table'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade database schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('devices',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('device_type', sa.Enum('RASPBERRY_PI', 'ARDUINO', 'CUSTOM', 'SIMULATION', name='devicetype'), nullable=False),
    sa.Column('serial_number', sa.String(length=100), nullable=True),
    sa.Column('mac_address', sa.String(length=17), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('status', sa.Enum('OFFLINE', 'ONLINE', 'BUSY', 'ERROR', 'MAINTENANCE', name='devicestatus'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('hardware_config', sa.JSON(), nullable=True),
    sa.Column('software_config', sa.JSON(), nullable=True),
    sa.Column('capabilities', sa.JSON(), nullable=True),
    sa.Column('last_heartbeat_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_maintenance_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('next_maintenance_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('firmware_version', sa.String(length=50), nullable=True),
    sa.Column('agent_version', sa.String(length=50), nullable=True),
    sa.Column('uptime_hours', sa.Float(), nullable=True),
    sa.Column('cpu_usage_percent', sa.Float(), nullable=True),
    sa.Column('memory_usage_percent', sa.Float(), nullable=True),
    sa.Column('disk_usage_percent', sa.Float(), nullable=True),
    sa.Column('temperature_celsius', sa.Float(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'name', name='uq_devices_org_name')
    )
    op.create_index('idx_devices_active', 'devices', ['is_active'], unique=False)
    op.create_index('idx_devices_heartbeat', 'devices', ['last_heartbeat_at'], unique=False)
    op.create_index('idx_devices_location', 'devices', ['location'], unique=False)
    op.create_index('idx_devices_organization_status', 'devices', ['organization_id', 'status'], unique=False)
    op.create_index('idx_devices_type', 'devices', ['device_type'], unique=False)
    op.create_index(op.f('ix_devices_mac_address'), 'devices', ['mac_address'], unique=True)
    op.create_index(op.f('ix_devices_serial_number'), 'devices', ['serial_number'], unique=True)
    op.create_index(op.f('ix_devices_status'), 'devices', ['status'], unique=False)
    op.create_table('organizations',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('max_users', sa.Integer(), nullable=True),
    sa.Column('max_devices', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    naming_convention={'ix': 'ix_%(column_0_label)s', 'uq': 'uq_%(table_name)s_%(column_0_name)s', 'ck': 'ck_%(table_name)s_%(constraint_name)s', 'fk': 'fk_%(table_name)s_%(column_0_name)s_%(referred_table_name)s', 'pk': 'pk_%(table_name)s'}
    )
    op.create_table('permissions',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('display_name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('resource', sa.String(length=50), nullable=False),
    sa.Column('action', sa.String(length=50), nullable=False),
    sa.Column('is_system_permission', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', name='uq_permissions_name'),
    sa.UniqueConstraint('resource', 'action', name='uq_permissions_resource_action')
    )
    op.create_index('idx_permissions_action', 'permissions', ['action'], unique=False)
    op.create_index('idx_permissions_resource', 'permissions', ['resource'], unique=False)
    op.create_index('idx_permissions_system', 'permissions', ['is_system_permission'], unique=False)
    op.create_index(op.f('ix_permissions_action'), 'permissions', ['action'], unique=False)
    op.create_index(op.f('ix_permissions_name'), 'permissions', ['name'], unique=True)
    op.create_index(op.f('ix_permissions_resource'), 'permissions', ['resource'], unique=False)
    op.create_table('roles',
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('display_name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('parent_role_id', sa.UUID(), nullable=True),
    sa.Column('is_system_role', sa.Boolean(), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['parent_role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', name='uq_roles_name')
    )
    op.create_index('idx_roles_default', 'roles', ['is_default'], unique=False)
    op.create_index('idx_roles_parent', 'roles', ['parent_role_id'], unique=False)
    op.create_index('idx_roles_system', 'roles', ['is_system_role'], unique=False)
    op.create_index(op.f('ix_roles_name'), 'roles', ['name'], unique=True)
    op.create_table('users',
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('email_verification_token', sa.String(length=255), nullable=True),
    sa.Column('email_verified_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('password_reset_token', sa.String(length=255), nullable=True),
    sa.Column('password_reset_expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_login_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_login_ip', sa.String(length=45), nullable=True),
    sa.Column('failed_login_attempts', sa.Integer(), nullable=False),
    sa.Column('account_locked_until', sa.DateTime(timezone=True), nullable=True),
    sa.Column('mfa_enabled', sa.Boolean(), nullable=False),
    sa.Column('mfa_secret', sa.String(length=255), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('language', sa.String(length=10), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email', name='uq_users_email'),
    sa.UniqueConstraint('username', name='uq_users_username')
    )
    op.create_index('idx_users_active', 'users', ['is_active'], unique=False)
    op.create_index('idx_users_organization_email', 'users', ['organization_id', 'email'], unique=False)
    op.create_index('idx_users_reset_token', 'users', ['password_reset_token'], unique=False)
    op.create_index('idx_users_verification_token', 'users', ['email_verification_token'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_email_verification_token'), 'users', ['email_verification_token'], unique=False)
    op.create_index(op.f('ix_users_password_reset_token'), 'users', ['password_reset_token'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('experiments',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('protocol_version', sa.String(length=50), nullable=False),
    sa.Column('experiment_type', sa.String(length=100), nullable=False),
    sa.Column('principal_investigator_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('DRAFT', 'READY', 'RUNNING', 'PAUSED', 'COMPLETED', 'CANCELLED', 'ERROR', name='experimentstatus'), nullable=False),
    sa.Column('scheduled_start_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('scheduled_end_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('actual_start_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('actual_end_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('parameters', sa.JSON(), nullable=True),
    sa.Column('experiment_metadata', sa.JSON(), nullable=True),
    sa.Column('results_summary', sa.JSON(), nullable=True),
    sa.Column('data_collection_rate_hz', sa.Float(), nullable=True),
    sa.Column('total_data_points', sa.Integer(), nullable=True),
    sa.Column('ethics_approval_number', sa.String(length=100), nullable=True),
    sa.Column('protocol_compliance_notes', sa.Text(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['principal_investigator_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'name', name='uq_experiments_org_name')
    )
    op.create_index('idx_experiments_actual_start', 'experiments', ['actual_start_at'], unique=False)
    op.create_index('idx_experiments_organization_status', 'experiments', ['organization_id', 'status'], unique=False)
    op.create_index('idx_experiments_pi', 'experiments', ['principal_investigator_id'], unique=False)
    op.create_index('idx_experiments_scheduled_start', 'experiments', ['scheduled_start_at'], unique=False)
    op.create_index('idx_experiments_type', 'experiments', ['experiment_type'], unique=False)
    op.create_index(op.f('ix_experiments_experiment_type'), 'experiments', ['experiment_type'], unique=False)
    op.create_index(op.f('ix_experiments_status'), 'experiments', ['status'], unique=False)
    op.create_table('refresh_tokens',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('token_id', sa.String(length=255), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_revoked', sa.Boolean(), nullable=False),
    sa.Column('revoked_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token_id', name='uq_refresh_tokens_token_id')
    )
    op.create_index('idx_refresh_tokens_expires', 'refresh_tokens', ['expires_at'], unique=False)
    op.create_index('idx_refresh_tokens_revoked', 'refresh_tokens', ['is_revoked'], unique=False)
    op.create_index('idx_refresh_tokens_user_id', 'refresh_tokens', ['user_id'], unique=False)
    op.create_index(op.f('ix_refresh_tokens_token_id'), 'refresh_tokens', ['token_id'], unique=True)
    op.create_index(op.f('ix_refresh_tokens_user_id'), 'refresh_tokens', ['user_id'], unique=False)
    op.create_table('role_permissions',
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.Column('permission_id', sa.UUID(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('assigned_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('role_id', 'permission_id')
    )
    op.create_index('idx_role_permissions_permission_id', 'role_permissions', ['permission_id'], unique=False)
    op.create_index('idx_role_permissions_role_id', 'role_permissions', ['role_id'], unique=False)
    op.create_table('tasks',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=False),
    sa.Column('version', sa.String(length=50), nullable=False),
    sa.Column('author_id', sa.UUID(), nullable=False),
    sa.Column('is_template', sa.Boolean(), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('definition', sa.JSON(), nullable=False),
    sa.Column('parameters_schema', sa.JSON(), nullable=True),
    sa.Column('default_parameters', sa.JSON(), nullable=True),
    sa.Column('required_capabilities', sa.JSON(), nullable=True),
    sa.Column('supported_device_types', sa.JSON(), nullable=True),
    sa.Column('estimated_duration_minutes', sa.Float(), nullable=True),
    sa.Column('max_execution_time_minutes', sa.Float(), nullable=True),
    sa.Column('is_validated', sa.Boolean(), nullable=False),
    sa.Column('validation_notes', sa.Text(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('rating_average', sa.Float(), nullable=True),
    sa.Column('rating_count', sa.Integer(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'name', 'version', name='uq_tasks_org_name_version')
    )
    op.create_index('idx_tasks_author', 'tasks', ['author_id'], unique=False)
    op.create_index('idx_tasks_organization_category', 'tasks', ['organization_id', 'category'], unique=False)
    op.create_index('idx_tasks_public', 'tasks', ['is_public'], unique=False)
    op.create_index('idx_tasks_template', 'tasks', ['is_template'], unique=False)
    op.create_index('idx_tasks_usage', 'tasks', ['usage_count'], unique=False)
    op.create_index('idx_tasks_validated', 'tasks', ['is_validated'], unique=False)
    op.create_index(op.f('ix_tasks_category'), 'tasks', ['category'], unique=False)
    op.create_index(op.f('ix_tasks_is_public'), 'tasks', ['is_public'], unique=False)
    op.create_index(op.f('ix_tasks_is_template'), 'tasks', ['is_template'], unique=False)
    op.create_table('user_roles',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('assigned_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    op.create_index('idx_user_roles_role_id', 'user_roles', ['role_id'], unique=False)
    op.create_index('idx_user_roles_user_id', 'user_roles', ['user_id'], unique=False)
    op.create_table('user_sessions',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('session_token', sa.String(length=255), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_activity_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('session_token', name='uq_user_sessions_token')
    )
    op.create_index('idx_user_sessions_active', 'user_sessions', ['is_active'], unique=False)
    op.create_index('idx_user_sessions_expires', 'user_sessions', ['expires_at'], unique=False)
    op.create_index('idx_user_sessions_user_id', 'user_sessions', ['user_id'], unique=False)
    op.create_index(op.f('ix_user_sessions_session_token'), 'user_sessions', ['session_token'], unique=True)
    op.create_index(op.f('ix_user_sessions_user_id'), 'user_sessions', ['user_id'], unique=False)
    op.create_table('experiment_devices',
    sa.Column('experiment_id', sa.UUID(), nullable=False),
    sa.Column('device_id', sa.UUID(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('assigned_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.ForeignKeyConstraint(['experiment_id'], ['experiments.id'], ),
    sa.PrimaryKeyConstraint('experiment_id', 'device_id')
    )
    op.create_index('idx_experiment_devices_device_id', 'experiment_devices', ['device_id'], unique=False)
    op.create_index('idx_experiment_devices_exp_id', 'experiment_devices', ['experiment_id'], unique=False)
    op.create_table('experiment_tasks',
    sa.Column('experiment_id', sa.UUID(), nullable=False),
    sa.Column('task_id', sa.UUID(), nullable=False),
    sa.Column('execution_order', sa.Integer(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('assigned_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['experiment_id'], ['experiments.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('experiment_id', 'task_id')
    )
    op.create_index('idx_experiment_tasks_exp_id', 'experiment_tasks', ['experiment_id'], unique=False)
    op.create_index('idx_experiment_tasks_order', 'experiment_tasks', ['execution_order'], unique=False)
    op.create_index('idx_experiment_tasks_task_id', 'experiment_tasks', ['task_id'], unique=False)
    op.create_table('participants',
    sa.Column('experiment_id', sa.UUID(), nullable=False),
    sa.Column('participant_id', sa.String(length=100), nullable=False),
    sa.Column('species', sa.String(length=100), nullable=True),
    sa.Column('strain', sa.String(length=100), nullable=True),
    sa.Column('sex', sa.String(length=10), nullable=True),
    sa.Column('birth_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('weight_grams', sa.Float(), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'COMPLETED', 'WITHDRAWN', name='participantstatus'), nullable=False),
    sa.Column('enrollment_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('completion_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('participant_metadata', sa.JSON(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['experiment_id'], ['experiments.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('experiment_id', 'participant_id', name='uq_participants_exp_id')
    )
    op.create_index('idx_participants_enrollment', 'participants', ['enrollment_date'], unique=False)
    op.create_index('idx_participants_experiment', 'participants', ['experiment_id'], unique=False)
    op.create_index('idx_participants_species', 'participants', ['species'], unique=False)
    op.create_index('idx_participants_status', 'participants', ['status'], unique=False)
    op.create_index(op.f('ix_participants_experiment_id'), 'participants', ['experiment_id'], unique=False)
    op.create_index(op.f('ix_participants_status'), 'participants', ['status'], unique=False)
    op.create_table('task_executions',
    sa.Column('task_id', sa.UUID(), nullable=False),
    sa.Column('device_id', sa.UUID(), nullable=False),
    sa.Column('experiment_id', sa.UUID(), nullable=True),
    sa.Column('execution_id', sa.String(length=100), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'RUNNING', 'COMPLETED', 'FAILED', 'CANCELLED', name='taskstatus'), nullable=False),
    sa.Column('scheduled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('parameters', sa.JSON(), nullable=True),
    sa.Column('results', sa.JSON(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('execution_time_seconds', sa.Float(), nullable=True),
    sa.Column('data_points_collected', sa.Integer(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.ForeignKeyConstraint(['experiment_id'], ['experiments.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_task_executions_completed', 'task_executions', ['completed_at'], unique=False)
    op.create_index('idx_task_executions_device', 'task_executions', ['device_id'], unique=False)
    op.create_index('idx_task_executions_experiment', 'task_executions', ['experiment_id'], unique=False)
    op.create_index('idx_task_executions_started', 'task_executions', ['started_at'], unique=False)
    op.create_index('idx_task_executions_status', 'task_executions', ['status'], unique=False)
    op.create_index('idx_task_executions_task', 'task_executions', ['task_id'], unique=False)
    op.create_index(op.f('ix_task_executions_device_id'), 'task_executions', ['device_id'], unique=False)
    op.create_index(op.f('ix_task_executions_execution_id'), 'task_executions', ['execution_id'], unique=True)
    op.create_index(op.f('ix_task_executions_experiment_id'), 'task_executions', ['experiment_id'], unique=False)
    op.create_index(op.f('ix_task_executions_status'), 'task_executions', ['status'], unique=False)
    op.create_index(op.f('ix_task_executions_task_id'), 'task_executions', ['task_id'], unique=False)
    op.create_table('device_data',
    sa.Column('device_id', sa.UUID(), nullable=False),
    sa.Column('task_execution_id', sa.UUID(), nullable=True),
    sa.Column('data_type', sa.String(length=100), nullable=False),
    sa.Column('data_source', sa.String(length=100), nullable=False),
    sa.Column('data_value', sa.JSON(), nullable=True),
    sa.Column('data_blob', sa.Text(), nullable=True),
    sa.Column('numeric_value', sa.Float(), nullable=True),
    sa.Column('string_value', sa.String(length=500), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('units', sa.String(length=50), nullable=True),
    sa.Column('quality_score', sa.Float(), nullable=True),
    sa.Column('data_metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.ForeignKeyConstraint(['task_execution_id'], ['task_executions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_device_data_device_timestamp', 'device_data', ['device_id', 'timestamp'], unique=False)
    op.create_index('idx_device_data_numeric', 'device_data', ['numeric_value'], unique=False)
    op.create_index('idx_device_data_source', 'device_data', ['data_source'], unique=False)
    op.create_index('idx_device_data_task_execution', 'device_data', ['task_execution_id'], unique=False)
    op.create_index('idx_device_data_timestamp', 'device_data', ['timestamp'], unique=False)
    op.create_index('idx_device_data_type', 'device_data', ['data_type'], unique=False)
    op.create_index(op.f('ix_device_data_data_type'), 'device_data', ['data_type'], unique=False)
    op.create_index(op.f('ix_device_data_device_id'), 'device_data', ['device_id'], unique=False)
    op.create_index(op.f('ix_device_data_numeric_value'), 'device_data', ['numeric_value'], unique=False)
    op.create_index(op.f('ix_device_data_task_execution_id'), 'device_data', ['task_execution_id'], unique=False)
    op.create_index(op.f('ix_device_data_timestamp'), 'device_data', ['timestamp'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade database schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_device_data_timestamp'), table_name='device_data')
    op.drop_index(op.f('ix_device_data_task_execution_id'), table_name='device_data')
    op.drop_index(op.f('ix_device_data_numeric_value'), table_name='device_data')
    op.drop_index(op.f('ix_device_data_device_id'), table_name='device_data')
    op.drop_index(op.f('ix_device_data_data_type'), table_name='device_data')
    op.drop_index('idx_device_data_type', table_name='device_data')
    op.drop_index('idx_device_data_timestamp', table_name='device_data')
    op.drop_index('idx_device_data_task_execution', table_name='device_data')
    op.drop_index('idx_device_data_source', table_name='device_data')
    op.drop_index('idx_device_data_numeric', table_name='device_data')
    op.drop_index('idx_device_data_device_timestamp', table_name='device_data')
    op.drop_table('device_data')
    op.drop_index(op.f('ix_task_executions_task_id'), table_name='task_executions')
    op.drop_index(op.f('ix_task_executions_status'), table_name='task_executions')
    op.drop_index(op.f('ix_task_executions_experiment_id'), table_name='task_executions')
    op.drop_index(op.f('ix_task_executions_execution_id'), table_name='task_executions')
    op.drop_index(op.f('ix_task_executions_device_id'), table_name='task_executions')
    op.drop_index('idx_task_executions_task', table_name='task_executions')
    op.drop_index('idx_task_executions_status', table_name='task_executions')
    op.drop_index('idx_task_executions_started', table_name='task_executions')
    op.drop_index('idx_task_executions_experiment', table_name='task_executions')
    op.drop_index('idx_task_executions_device', table_name='task_executions')
    op.drop_index('idx_task_executions_completed', table_name='task_executions')
    op.drop_table('task_executions')
    op.drop_index(op.f('ix_participants_status'), table_name='participants')
    op.drop_index(op.f('ix_participants_experiment_id'), table_name='participants')
    op.drop_index('idx_participants_status', table_name='participants')
    op.drop_index('idx_participants_species', table_name='participants')
    op.drop_index('idx_participants_experiment', table_name='participants')
    op.drop_index('idx_participants_enrollment', table_name='participants')
    op.drop_table('participants')
    op.drop_index('idx_experiment_tasks_task_id', table_name='experiment_tasks')
    op.drop_index('idx_experiment_tasks_order', table_name='experiment_tasks')
    op.drop_index('idx_experiment_tasks_exp_id', table_name='experiment_tasks')
    op.drop_table('experiment_tasks')
    op.drop_index('idx_experiment_devices_exp_id', table_name='experiment_devices')
    op.drop_index('idx_experiment_devices_device_id', table_name='experiment_devices')
    op.drop_table('experiment_devices')
    op.drop_index(op.f('ix_user_sessions_user_id'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_session_token'), table_name='user_sessions')
    op.drop_index('idx_user_sessions_user_id', table_name='user_sessions')
    op.drop_index('idx_user_sessions_expires', table_name='user_sessions')
    op.drop_index('idx_user_sessions_active', table_name='user_sessions')
    op.drop_table('user_sessions')
    op.drop_index('idx_user_roles_user_id', table_name='user_roles')
    op.drop_index('idx_user_roles_role_id', table_name='user_roles')
    op.drop_table('user_roles')
    op.drop_index(op.f('ix_tasks_is_template'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_is_public'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_category'), table_name='tasks')
    op.drop_index('idx_tasks_validated', table_name='tasks')
    op.drop_index('idx_tasks_usage', table_name='tasks')
    op.drop_index('idx_tasks_template', table_name='tasks')
    op.drop_index('idx_tasks_public', table_name='tasks')
    op.drop_index('idx_tasks_organization_category', table_name='tasks')
    op.drop_index('idx_tasks_author', table_name='tasks')
    op.drop_table('tasks')
    op.drop_index('idx_role_permissions_role_id', table_name='role_permissions')
    op.drop_index('idx_role_permissions_permission_id', table_name='role_permissions')
    op.drop_table('role_permissions')
    op.drop_index(op.f('ix_refresh_tokens_user_id'), table_name='refresh_tokens')
    op.drop_index(op.f('ix_refresh_tokens_token_id'), table_name='refresh_tokens')
    op.drop_index('idx_refresh_tokens_user_id', table_name='refresh_tokens')
    op.drop_index('idx_refresh_tokens_revoked', table_name='refresh_tokens')
    op.drop_index('idx_refresh_tokens_expires', table_name='refresh_tokens')
    op.drop_table('refresh_tokens')
    op.drop_index(op.f('ix_experiments_status'), table_name='experiments')
    op.drop_index(op.f('ix_experiments_experiment_type'), table_name='experiments')
    op.drop_index('idx_experiments_type', table_name='experiments')
    op.drop_index('idx_experiments_scheduled_start', table_name='experiments')
    op.drop_index('idx_experiments_pi', table_name='experiments')
    op.drop_index('idx_experiments_organization_status', table_name='experiments')
    op.drop_index('idx_experiments_actual_start', table_name='experiments')
    op.drop_table('experiments')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_password_reset_token'), table_name='users')
    op.drop_index(op.f('ix_users_email_verification_token'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index('idx_users_verification_token', table_name='users')
    op.drop_index('idx_users_reset_token', table_name='users')
    op.drop_index('idx_users_organization_email', table_name='users')
    op.drop_index('idx_users_active', table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_roles_name'), table_name='roles')
    op.drop_index('idx_roles_system', table_name='roles')
    op.drop_index('idx_roles_parent', table_name='roles')
    op.drop_index('idx_roles_default', table_name='roles')
    op.drop_table('roles')
    op.drop_index(op.f('ix_permissions_resource'), table_name='permissions')
    op.drop_index(op.f('ix_permissions_name'), table_name='permissions')
    op.drop_index(op.f('ix_permissions_action'), table_name='permissions')
    op.drop_index('idx_permissions_system', table_name='permissions')
    op.drop_index('idx_permissions_resource', table_name='permissions')
    op.drop_index('idx_permissions_action', table_name='permissions')
    op.drop_table('permissions')
    op.drop_table('organizations')
    op.drop_index(op.f('ix_devices_status'), table_name='devices')
    op.drop_index(op.f('ix_devices_serial_number'), table_name='devices')
    op.drop_index(op.f('ix_devices_mac_address'), table_name='devices')
    op.drop_index('idx_devices_type', table_name='devices')
    op.drop_index('idx_devices_organization_status', table_name='devices')
    op.drop_index('idx_devices_location', table_name='devices')
    op.drop_index('idx_devices_heartbeat', table_name='devices')
    op.drop_index('idx_devices_active', table_name='devices')
    op.drop_table('devices')
    # ### end Alembic commands ###